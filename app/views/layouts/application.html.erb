<!DOCTYPE html>
<html>
  <head>
    <title>Github Repository Search</title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Chivo&family=Lato:wght@700&display=swap" rel="stylesheet">
    <%= stylesheet_link_tag "application" %>
  </head>

  <body>
    <%= yield %>
  </body>

  <script >
    document.addEventListener("DOMContentLoaded", () => {

      const queryField = document.querySelector('#input')
      const perPageSelector = document.querySelector('#per_page')
      const pageNavigator = document.querySelector('#page-navigator')
      const perviousPageButton = document.querySelector('#previous-button')
      const nextPageButton = document.querySelector('#next-button')

      const currentPage = parseInt(pageNavigator.dataset.currentPage)

      if(currentPage === 1){
        perviousPageButton.disabled = true
      }

      const updateQueryParam = (param, value, url=null) => {
        let destinationURL;
        if(url === null) {
          destinationURL = new URL(window.location)
          destinationURL.searchParams.has(param) ? destinationURL.searchParams.set(param, value) : destinationURL.searchParams.append(param, value)
          destinationURL.search = destinationURL.searchParams
          return destinationURL
        } else {
          url.searchParams.has(param) ? url.searchParams.set(param, value) : url.searchParams.append(param, value)
          url.search = url.searchParams
          return url
        }
      }

      document.addEventListener('keydown', (event) => {
        if(event.key === 'Enter'){
          event.preventDefault();
          console.log('i was called')
          let url = updateQueryParam('query', queryField.value)
          window.location = url.toString();
        }
      })

      perPageSelector.addEventListener('change', (element) => {
        let url = updateQueryParam('per_page', element.target.value)
        window.location = updateQueryParam('page', 1, url).toString();
      })

      nextPageButton.addEventListener('click', (element) => {
        element.preventDefault();

        let url = updateQueryParam('page', currentPage + 1)
        window.location = url.toString();
      })

      perviousPageButton.addEventListener('click', (element) => {
        element.preventDefault();

        if(currentPage === 1){
          return
        }
        let url = updateQueryParam('page', currentPage - 1)
        window.location = url.toString()
      })

    })
  </script>
</html>
